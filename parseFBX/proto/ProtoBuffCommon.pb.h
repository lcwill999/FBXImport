// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffCommon.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProtoBuffCommon_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProtoBuffCommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtoBuffCommon_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoBuffCommon_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProtoBuffCommon_2eproto;
namespace message {
class ProtoBuffColor;
struct ProtoBuffColorDefaultTypeInternal;
extern ProtoBuffColorDefaultTypeInternal _ProtoBuffColor_default_instance_;
class ProtoBuffQuaternion;
struct ProtoBuffQuaternionDefaultTypeInternal;
extern ProtoBuffQuaternionDefaultTypeInternal _ProtoBuffQuaternion_default_instance_;
class ProtoBuffVector2;
struct ProtoBuffVector2DefaultTypeInternal;
extern ProtoBuffVector2DefaultTypeInternal _ProtoBuffVector2_default_instance_;
class ProtoBuffVector3;
struct ProtoBuffVector3DefaultTypeInternal;
extern ProtoBuffVector3DefaultTypeInternal _ProtoBuffVector3_default_instance_;
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> ::message::ProtoBuffColor* Arena::CreateMaybeMessage<::message::ProtoBuffColor>(Arena*);
template<> ::message::ProtoBuffQuaternion* Arena::CreateMaybeMessage<::message::ProtoBuffQuaternion>(Arena*);
template<> ::message::ProtoBuffVector2* Arena::CreateMaybeMessage<::message::ProtoBuffVector2>(Arena*);
template<> ::message::ProtoBuffVector3* Arena::CreateMaybeMessage<::message::ProtoBuffVector3>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace message {

// ===================================================================

class ProtoBuffVector3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.ProtoBuffVector3) */ {
 public:
  inline ProtoBuffVector3() : ProtoBuffVector3(nullptr) {}
  ~ProtoBuffVector3() override;
  explicit PROTOBUF_CONSTEXPR ProtoBuffVector3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoBuffVector3(const ProtoBuffVector3& from);
  ProtoBuffVector3(ProtoBuffVector3&& from) noexcept
    : ProtoBuffVector3() {
    *this = ::std::move(from);
  }

  inline ProtoBuffVector3& operator=(const ProtoBuffVector3& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoBuffVector3& operator=(ProtoBuffVector3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoBuffVector3& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoBuffVector3* internal_default_instance() {
    return reinterpret_cast<const ProtoBuffVector3*>(
               &_ProtoBuffVector3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoBuffVector3& a, ProtoBuffVector3& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoBuffVector3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoBuffVector3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtoBuffVector3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtoBuffVector3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoBuffVector3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtoBuffVector3& from) {
    ProtoBuffVector3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoBuffVector3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.ProtoBuffVector3";
  }
  protected:
  explicit ProtoBuffVector3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float X = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float Y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float Z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:message.ProtoBuffVector3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoBuffCommon_2eproto;
};
// -------------------------------------------------------------------

class ProtoBuffVector2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.ProtoBuffVector2) */ {
 public:
  inline ProtoBuffVector2() : ProtoBuffVector2(nullptr) {}
  ~ProtoBuffVector2() override;
  explicit PROTOBUF_CONSTEXPR ProtoBuffVector2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoBuffVector2(const ProtoBuffVector2& from);
  ProtoBuffVector2(ProtoBuffVector2&& from) noexcept
    : ProtoBuffVector2() {
    *this = ::std::move(from);
  }

  inline ProtoBuffVector2& operator=(const ProtoBuffVector2& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoBuffVector2& operator=(ProtoBuffVector2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoBuffVector2& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoBuffVector2* internal_default_instance() {
    return reinterpret_cast<const ProtoBuffVector2*>(
               &_ProtoBuffVector2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtoBuffVector2& a, ProtoBuffVector2& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoBuffVector2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoBuffVector2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtoBuffVector2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtoBuffVector2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoBuffVector2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtoBuffVector2& from) {
    ProtoBuffVector2::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoBuffVector2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.ProtoBuffVector2";
  }
  protected:
  explicit ProtoBuffVector2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float X = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float Y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:message.ProtoBuffVector2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoBuffCommon_2eproto;
};
// -------------------------------------------------------------------

class ProtoBuffQuaternion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.ProtoBuffQuaternion) */ {
 public:
  inline ProtoBuffQuaternion() : ProtoBuffQuaternion(nullptr) {}
  ~ProtoBuffQuaternion() override;
  explicit PROTOBUF_CONSTEXPR ProtoBuffQuaternion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoBuffQuaternion(const ProtoBuffQuaternion& from);
  ProtoBuffQuaternion(ProtoBuffQuaternion&& from) noexcept
    : ProtoBuffQuaternion() {
    *this = ::std::move(from);
  }

  inline ProtoBuffQuaternion& operator=(const ProtoBuffQuaternion& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoBuffQuaternion& operator=(ProtoBuffQuaternion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoBuffQuaternion& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoBuffQuaternion* internal_default_instance() {
    return reinterpret_cast<const ProtoBuffQuaternion*>(
               &_ProtoBuffQuaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProtoBuffQuaternion& a, ProtoBuffQuaternion& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoBuffQuaternion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoBuffQuaternion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtoBuffQuaternion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtoBuffQuaternion>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoBuffQuaternion& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtoBuffQuaternion& from) {
    ProtoBuffQuaternion::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoBuffQuaternion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.ProtoBuffQuaternion";
  }
  protected:
  explicit ProtoBuffQuaternion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // float X = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float Y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float Z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float W = 4;
  void clear_w();
  float w() const;
  void set_w(float value);
  private:
  float _internal_w() const;
  void _internal_set_w(float value);
  public:

  // @@protoc_insertion_point(class_scope:message.ProtoBuffQuaternion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    float w_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoBuffCommon_2eproto;
};
// -------------------------------------------------------------------

class ProtoBuffColor final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.ProtoBuffColor) */ {
 public:
  inline ProtoBuffColor() : ProtoBuffColor(nullptr) {}
  ~ProtoBuffColor() override;
  explicit PROTOBUF_CONSTEXPR ProtoBuffColor(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoBuffColor(const ProtoBuffColor& from);
  ProtoBuffColor(ProtoBuffColor&& from) noexcept
    : ProtoBuffColor() {
    *this = ::std::move(from);
  }

  inline ProtoBuffColor& operator=(const ProtoBuffColor& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoBuffColor& operator=(ProtoBuffColor&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoBuffColor& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoBuffColor* internal_default_instance() {
    return reinterpret_cast<const ProtoBuffColor*>(
               &_ProtoBuffColor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProtoBuffColor& a, ProtoBuffColor& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoBuffColor* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoBuffColor* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtoBuffColor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtoBuffColor>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoBuffColor& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtoBuffColor& from) {
    ProtoBuffColor::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoBuffColor* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.ProtoBuffColor";
  }
  protected:
  explicit ProtoBuffColor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRFieldNumber = 1,
    kGFieldNumber = 2,
    kBFieldNumber = 3,
    kAFieldNumber = 4,
  };
  // int32 R = 1;
  void clear_r();
  int32_t r() const;
  void set_r(int32_t value);
  private:
  int32_t _internal_r() const;
  void _internal_set_r(int32_t value);
  public:

  // int32 G = 2;
  void clear_g();
  int32_t g() const;
  void set_g(int32_t value);
  private:
  int32_t _internal_g() const;
  void _internal_set_g(int32_t value);
  public:

  // int32 B = 3;
  void clear_b();
  int32_t b() const;
  void set_b(int32_t value);
  private:
  int32_t _internal_b() const;
  void _internal_set_b(int32_t value);
  public:

  // int32 A = 4;
  void clear_a();
  int32_t a() const;
  void set_a(int32_t value);
  private:
  int32_t _internal_a() const;
  void _internal_set_a(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:message.ProtoBuffColor)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t r_;
    int32_t g_;
    int32_t b_;
    int32_t a_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoBuffCommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoBuffVector3

// float X = 1;
inline void ProtoBuffVector3::clear_x() {
  _impl_.x_ = 0;
}
inline float ProtoBuffVector3::_internal_x() const {
  return _impl_.x_;
}
inline float ProtoBuffVector3::x() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffVector3.X)
  return _internal_x();
}
inline void ProtoBuffVector3::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void ProtoBuffVector3::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffVector3.X)
}

// float Y = 2;
inline void ProtoBuffVector3::clear_y() {
  _impl_.y_ = 0;
}
inline float ProtoBuffVector3::_internal_y() const {
  return _impl_.y_;
}
inline float ProtoBuffVector3::y() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffVector3.Y)
  return _internal_y();
}
inline void ProtoBuffVector3::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void ProtoBuffVector3::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffVector3.Y)
}

// float Z = 3;
inline void ProtoBuffVector3::clear_z() {
  _impl_.z_ = 0;
}
inline float ProtoBuffVector3::_internal_z() const {
  return _impl_.z_;
}
inline float ProtoBuffVector3::z() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffVector3.Z)
  return _internal_z();
}
inline void ProtoBuffVector3::_internal_set_z(float value) {
  
  _impl_.z_ = value;
}
inline void ProtoBuffVector3::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffVector3.Z)
}

// -------------------------------------------------------------------

// ProtoBuffVector2

// float X = 1;
inline void ProtoBuffVector2::clear_x() {
  _impl_.x_ = 0;
}
inline float ProtoBuffVector2::_internal_x() const {
  return _impl_.x_;
}
inline float ProtoBuffVector2::x() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffVector2.X)
  return _internal_x();
}
inline void ProtoBuffVector2::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void ProtoBuffVector2::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffVector2.X)
}

// float Y = 2;
inline void ProtoBuffVector2::clear_y() {
  _impl_.y_ = 0;
}
inline float ProtoBuffVector2::_internal_y() const {
  return _impl_.y_;
}
inline float ProtoBuffVector2::y() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffVector2.Y)
  return _internal_y();
}
inline void ProtoBuffVector2::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void ProtoBuffVector2::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffVector2.Y)
}

// -------------------------------------------------------------------

// ProtoBuffQuaternion

// float X = 1;
inline void ProtoBuffQuaternion::clear_x() {
  _impl_.x_ = 0;
}
inline float ProtoBuffQuaternion::_internal_x() const {
  return _impl_.x_;
}
inline float ProtoBuffQuaternion::x() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffQuaternion.X)
  return _internal_x();
}
inline void ProtoBuffQuaternion::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void ProtoBuffQuaternion::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffQuaternion.X)
}

// float Y = 2;
inline void ProtoBuffQuaternion::clear_y() {
  _impl_.y_ = 0;
}
inline float ProtoBuffQuaternion::_internal_y() const {
  return _impl_.y_;
}
inline float ProtoBuffQuaternion::y() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffQuaternion.Y)
  return _internal_y();
}
inline void ProtoBuffQuaternion::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void ProtoBuffQuaternion::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffQuaternion.Y)
}

// float Z = 3;
inline void ProtoBuffQuaternion::clear_z() {
  _impl_.z_ = 0;
}
inline float ProtoBuffQuaternion::_internal_z() const {
  return _impl_.z_;
}
inline float ProtoBuffQuaternion::z() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffQuaternion.Z)
  return _internal_z();
}
inline void ProtoBuffQuaternion::_internal_set_z(float value) {
  
  _impl_.z_ = value;
}
inline void ProtoBuffQuaternion::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffQuaternion.Z)
}

// float W = 4;
inline void ProtoBuffQuaternion::clear_w() {
  _impl_.w_ = 0;
}
inline float ProtoBuffQuaternion::_internal_w() const {
  return _impl_.w_;
}
inline float ProtoBuffQuaternion::w() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffQuaternion.W)
  return _internal_w();
}
inline void ProtoBuffQuaternion::_internal_set_w(float value) {
  
  _impl_.w_ = value;
}
inline void ProtoBuffQuaternion::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffQuaternion.W)
}

// -------------------------------------------------------------------

// ProtoBuffColor

// int32 R = 1;
inline void ProtoBuffColor::clear_r() {
  _impl_.r_ = 0;
}
inline int32_t ProtoBuffColor::_internal_r() const {
  return _impl_.r_;
}
inline int32_t ProtoBuffColor::r() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffColor.R)
  return _internal_r();
}
inline void ProtoBuffColor::_internal_set_r(int32_t value) {
  
  _impl_.r_ = value;
}
inline void ProtoBuffColor::set_r(int32_t value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffColor.R)
}

// int32 G = 2;
inline void ProtoBuffColor::clear_g() {
  _impl_.g_ = 0;
}
inline int32_t ProtoBuffColor::_internal_g() const {
  return _impl_.g_;
}
inline int32_t ProtoBuffColor::g() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffColor.G)
  return _internal_g();
}
inline void ProtoBuffColor::_internal_set_g(int32_t value) {
  
  _impl_.g_ = value;
}
inline void ProtoBuffColor::set_g(int32_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffColor.G)
}

// int32 B = 3;
inline void ProtoBuffColor::clear_b() {
  _impl_.b_ = 0;
}
inline int32_t ProtoBuffColor::_internal_b() const {
  return _impl_.b_;
}
inline int32_t ProtoBuffColor::b() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffColor.B)
  return _internal_b();
}
inline void ProtoBuffColor::_internal_set_b(int32_t value) {
  
  _impl_.b_ = value;
}
inline void ProtoBuffColor::set_b(int32_t value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffColor.B)
}

// int32 A = 4;
inline void ProtoBuffColor::clear_a() {
  _impl_.a_ = 0;
}
inline int32_t ProtoBuffColor::_internal_a() const {
  return _impl_.a_;
}
inline int32_t ProtoBuffColor::a() const {
  // @@protoc_insertion_point(field_get:message.ProtoBuffColor.A)
  return _internal_a();
}
inline void ProtoBuffColor::_internal_set_a(int32_t value) {
  
  _impl_.a_ = value;
}
inline void ProtoBuffColor::set_a(int32_t value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:message.ProtoBuffColor.A)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProtoBuffCommon_2eproto
